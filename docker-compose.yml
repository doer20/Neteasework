version: "3"
services:
    peer1:
        build: ./service-registry
        network_mode: "host"
        ports:
            - "8761:8761"
        environment:
            - spring.profiles.active=peer1
        entrypoint: ["java", "-jar", "/usr/local/service-registry-0.0.1-SNAPSHOT.jar"]
    peer2:
        build: ./service-registry
        network_mode: "host"
        hostname: peer2
        ports:
            - "8762:8762"
        environment:
            - spring.profiles.active=peer2
        entrypoint: ["java", "-jar", "/usr/local/service-registry-0.0.1-SNAPSHOT.jar"]
    config-server:
        build: ./config-server
        network_mode: "host"
        ports:
            - "7000:7000"
        depends_on:
            - peer1
            - peer2
        restart: always
        volumes:
            - "./wait-for-service.sh:/wait-for-service.sh"
        entrypoint: ["sh", "/wait-for-service.sh", "peer2", "8762", "/usr/local/config-server-0.0.1-SNAPSHOT.jar"]
    account-service:
        build: ./account-service
        network_mode: "host"
        ports:
            - "8701:8701"
        depends_on:
            - peer1
            - peer2
            - config-server
        restart: always
        volumes:
            - "./wait-for-service.sh:/wait-for-service.sh"
        entrypoint: ["sh", "/wait-for-service.sh", "localhost", "7000", "/usr/local/account-service-0.0.1-SNAPSHOT.jar"]
    product-service:
        build: ./product-service
        network_mode: "host"
        ports:
            - "8801:8801"
        depends_on:
            - peer1
            - peer2
            - config-server
            - account-service
        restart: always
        volumes:
            - "./wait-for-service.sh:/wait-for-service.sh"
        entrypoint: ["sh", "/wait-for-service.sh", "localhost", "7000", "/usr/local/product-service-0.0.1-SNAPSHOT.jar"]
    cart-service:
        build: ./cart-service
        network_mode: "host"
        ports:
            - "8821:8821"
        depends_on:
            - peer1
            - peer2
            - config-server
            - account-service
        restart: always
        volumes:
            - "./wait-for-service.sh:/wait-for-service.sh"
        entrypoint: ["sh", "/wait-for-service.sh", "localhost", "7000", "/usr/local/cart-service-0.0.1-SNAPSHOT.jar"]
    order-service:
        build: ./order-service
        network_mode: "host"
        ports:
            - "8811:8811"
        depends_on:
            - peer1
            - peer2
            - config-server
            - account-service
        restart: always
        volumes:
            - "./wait-for-service.sh:/wait-for-service.sh"
        entrypoint: ["sh", "/wait-for-service.sh", "localhost", "7000", "/usr/local/order-service-0.0.1-SNAPSHOT.jar"]
    payment-service:
        build: ./payment-service
        network_mode: "host"
        ports:
            - "8831:8831"
        depends_on:
            - peer1
            - peer2
            - config-server
            - account-service
        restart: always
        volumes:
            - "./wait-for-service.sh:/wait-for-service.sh"
        entrypoint: ["sh", "/wait-for-service.sh", "localhost", "7000", "/usr/local/payment-service-0.0.1-SNAPSHOT.jar"] 
    edge-service:
        build: ./edge-service
        network_mode: "host"
        ports:
            - "8000:8000"
        depends_on:
            - peer1
            - peer2
            - config-server
            - account-service
            - product-service
            - cart-service
            - order-service
            - payment-service
        restart: always
        volumes:
            - "./wait-for-service.sh:/wait-for-service.sh"
        entrypoint: ["sh", "/wait-for-service.sh", "localhost", "7000", "/usr/local/edge-service-0.0.1-SNAPSHOT.jar"]
    turbine:
        build: ./turbine
        network_mode: "host"
        ports:
            - "8011:8011"
        depends_on:
            - peer1
            - peer2
        restart: always
        volumes:
            - "./wait-for-service.sh:/wait-for-service.sh"
        entrypoint: ["sh", "/wait-for-service.sh", "localhost", "7000", "/usr/local/turbine-0.0.1-SNAPSHOT.jar"]
    hystrix-dashboard:
        build: ./hystrix-dashboard
        network_mode: "host"
        ports:
            - "8001:8001"
        depends_on:
            - peer1
            - peer2
        restart: always
        volumes:
            - "./wait-for-service.sh:/wait-for-service.sh"
        entrypoint: ["sh", "/wait-for-service.sh", "peer2", "8762", "/usr/local/hystrix-dashboard-0.0.1-SNAPSHOT.jar"]
